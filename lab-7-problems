#include<bits/stdc++.h>
using namespace std;
void displayPattern(int n){
    while(n--){
        for(int i = 0; i <= n; i++) cout << '*'; cout << '\n';
    }
}
int getType(int n){
    int cnt = 1;
    while(n /= 10) cnt ++;
    return cnt & 1;
}
///problem 3
int countDigitOccurrences(int num){
    int a[10]; num *= 10;
    while(num /= 10) a[num % 10] ++;
    for(int i = 0; i < 10; i++) cout << "The frequency of " << i << " = " << a[i] << '\n';
}
void transforms(int n){
    string s[] = {"zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine"};
    string ans = "";
    while(n){
        ans = s[n % 10] + " " + ans;
        n /= 10;
    }
    cout << ans;
}
void main6()
{
    double a, b, c; cin >> a >> b >> c;
    double d = b * b - 4 * a * c;
    if(d < 0) cout << "Has no solution";
    else if(d == 0) sqrt(cout << -b/(2*a));
    else{
        cout << sqrt((-b+sqrt(d))/(2*a)) << ' ' << sqrt((-b-sqrt(d))/(2*a));
    }
}
void solveEquation(double a, double b, double c,
double d, double e, double f, double& x, double&
y, bool& isSolvable){
    double d = a*d-b*c;
    if(!d) cout << "The equation has no solution.";
    else{
        cout << ((e*d-b*f)/d) << ' ' << ((a*f-e*c)/d);
    }
}
bool areVectorsOrthogonal(double& x1, double& y1,
double& x2, double& y2, double& x3, double& y3,
double& x4, double& y4)
{
    double a1 = x2 - x1;
    double a2 = x4 - x3;
    double b1 = b2 - b1;
    double b2 = b4 - b3;
    return !(a1*b1+a2*b2);
}
int octal2Dec(const int& octalNumber){
    int oct = octalNumber;
    int cnt = 1, sum = 0;
    while(oct){
        sum += (oct % 10) * cnt;
        cnt *= 8;
        oct /= 10;
    }
    return sum;
}
void revChar(char& c){
    c += (c < 'a' ? 32 : -32);
}
double avgOfEvenPlaces(int n){
    double ans = 0, cnt = 0, rev = 0;
    while(n){
        rev *= 10; rev += n % 10; n /= 10;
        cnt ++;
    }
    while(rev){
        rev /= 10;
        ans += int(rev) % 10;
        rev /= 10;
    }
    return ans / double(int(cnt) / 2) ;
}
double predict(double n){
    double lastGuess = n + 1, nextGuess = n, epsilon = 0.0001;
    while (lastGuess - nextGuess > epsilon) {
        lastGuess = nextGuess;
        nextGuess = (lastGuess + n / lastGuess) / 2;
    }
    return nextGuess;
}
void enc(string s, int r) 
{ //cin >> s;
    //srand(time(0)); int r = rand() % 91 + 10; //r = 95;
    for(int i = 0; i < 8; i++){
        cout << -1 * (r * r * 3 / 10 - int(s[i])) << ' ';
    }
    cout << "KEY:" << r;
}
int main(){
    int k; cin >> k;
    for(int i = 0; i < 8; i++){
        int t; cin >> t; t *= -1;
        cout << char(k*k*3/10-t);
    }
}
bool isKaprekar(int n){
    int p = n * n, cnt = 1, mod = 10;
    while(p /= 10) cnt ++; p = n * n;
    for(int i = 0; i < cnt; i ++){
        if(p / mod + p % mod == n) return 1;
        mod *= 10;
    }
    return 0;
}
int revers(int n){
    int p = 0;
    while(n){
        p *= 10; p += n % 10; n /= 10;
    }
    return p;
}
bool isLychrel(int n){
    int m = revers(n);
    return revers(m + n) != m + n;
}
int countDigits(int num){
    int cnt = 1;
    while(num /= 10) cnt ++;
    return cnt;
}
int isNarcissistic(int num){
    int m = num, sum = 0, cnt = countDigits(num);
    while(num){
        sum += pow(num % 10, cnt);
        num /= 10;
    }
    return sum == m;
}
int cent(int n){
    return (n - 1) / 100 + 1;
}
void minuts(){
    int h1, h2, m1, m2; cin >> h1 >> m1 >> h2 >> m2;
    cout << 60 * (h2-h1) - (m1 - m2);
}
int days(int y, int m, int d) { /* Rata Die day one is 0001-01-01 */
    if (m < 3) y--, m += 12;
    return 365*y + y/4 - y/100 + y/400 + (153*m - 457)/5 + d - 306;
}
int main()
{
    days();
}
